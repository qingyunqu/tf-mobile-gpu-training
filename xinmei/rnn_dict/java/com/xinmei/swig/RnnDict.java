/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.xinmei.swig;

public class RnnDict {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected RnnDict(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(RnnDict obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        RnnModuleJNI.delete_RnnDict(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public RnnDict(byte[] data, String pName, String wordIdName, int[] wordIdShape, long wordIdShapeSize, long maxStateStepCacheCount, boolean quantized) {
    this(RnnModuleJNI.new_RnnDict(data, pName, wordIdName, wordIdShape, wordIdShapeSize, maxStateStepCacheCount, quantized), true);
  }

  public void addState(String inName, String outName, int[] shape, long size, boolean required) {
    RnnModuleJNI.RnnDict_addState(swigCPtr, this, inName, outName, shape, size, required);
  }

  public void predict(int[] ids, long idCount, boolean partialSequence, int topN) {
    RnnModuleJNI.RnnDict_predict(swigCPtr, this, ids, idCount, partialSequence, topN);
  }

  public int getWordId(int index) {
    return RnnModuleJNI.RnnDict_getWordId(swigCPtr, this, index);
  }

  public float getP(int index) {
    return RnnModuleJNI.RnnDict_getP(swigCPtr, this, index);
  }

  public long lastPredictStepCount() {
    return RnnModuleJNI.RnnDict_lastPredictStepCount(swigCPtr, this);
  }

  public int lastPredictTimeInMillis() {
    return RnnModuleJNI.RnnDict_lastPredictTimeInMillis(swigCPtr, this);
  }

}
